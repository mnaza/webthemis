/*
* Copyright (c) 2015 Cossack Labs Limited
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/


function secure_session_client(url, client_id, base64_client_private_key, server_id, base64_server_piublic_key){
    var secure_session_create = Module.cwrap('secure_session_client_create','pointer',['string', 'string', 'string', 'string']);
    this.session_destroy = Module.cwrap('secure_session_client_destroy','number',['number']);
    this.session = secure_session_create(client_id, base64_client_private_key, server_id, base64_server_piublic_key);
    if(!(this.session))
	return false;
    this.socket = new WebSocket(url);
    
    this.socket.onopen=function(){
	
	this.onOpen();
    }.bind(this);

    this.socket.onclose = function(event){
	this.onClose(event);
    }.bind(this);

    this.socket.onmessage = function(event){
	this.onMessage(event.data);
    }.bind(this);

    this.socket.onerror = function(error){
	this.onError(error);
    }.bind(this);
}

secure_session_client.prototype.close = function(){
    this.session_destroy(this.session);
}

secure_session_client.prototype.onOpen = function(){}
secure_session_client.prototype.onClose = function(event){}
secure_session_client.prototype.onMessage = function(msg){}
secure_session_client.prototype.onError = function(error){}
